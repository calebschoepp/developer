spin_manifest_version = 2

[application]
name = "fermyon-developer"
version = "0.1.0"
description = "The Fermyon Developer website running on... Spin."
authors = ["Fermyon Engineering <engineering@fermyon.com>"]

[application.trigger.http]
base = "/"

[[trigger.http]]
id = "trigger-bartholomew"
component = "bartholomew"
route = "/..."

[[trigger.http]]
id = "trigger-fileserver-static"
component = "fileserver-static"
route = "/static/..."

[[trigger.http]]
id = "trigger-fileserver-downloads"
component = "fileserver-downloads"
route = "/downloads/..."

[[trigger.http]]
id = "trigger-redirect-cloud-index"
component = "redirect-cloud-index"
route = "/cloud"

[[trigger.http]]
id = "trigger-redirect-bartholomew-index"
component = "redirect-bartholomew-index"
route = "/bartholomew"

[[trigger.http]]
id = "trigger-wildcard-redirect-spin-up-hub"
component = "wildcard-redirect-spin-up-hub"
route = "/hub/..."

[[trigger.http]]
id = "trigger-redirect-spin-rust-components-http-trigger"
component = "redirect-spin-rust-components-http-trigger"
route = "/spin/rust-components/http-trigger"

[[trigger.http]]
id = "trigger-spin-contributing-extending-and-embedding"
component = "spin-contributing-extending-and-embedding"
route = "/spin/contributing/extending-and-embedding"

[[trigger.http]]
id = "trigger-spin-rust-components-redis-trigger"
component = "spin-rust-components-redis-trigger"
route = "/spin/rust-components/redis-trigger"

[[trigger.http]]
id = "trigger-spin-configuration"
component = "spin-configuration"
route = "/spin/configuration"

[[trigger.http]]
id = "trigger-spin-configuration-http-trigger"
component = "spin-configuration-http-trigger"
route = "/spin/configuration/http-trigger"

[[trigger.http]]
id = "trigger-spin-configuration-redis-trigger"
component = "spin-configuration-redis-trigger"
route = "/spin/configuration/redis-trigger"

[[trigger.http]]
id = "trigger-spin-quickstart-developing"
component = "spin-quickstart-developing"
route = "/spin/quickstart/developing"

[[trigger.http]]
id = "trigger-spin-quickstart-configuration"
component = "spin-quickstart-configuration"
route = "/spin/quickstart/configuration"

[[trigger.http]]
id = "trigger-spin-quickstart-install"
component = "spin-quickstart-install"
route = "/spin/quickstart/install"

[[trigger.http]]
id = "trigger-spin-quickstart-go-components"
component = "spin-quickstart-go-components"
route = "/spin/quickstart/go-components"

[[trigger.http]]
id = "trigger-spin-quickstart-rust-components"
component = "spin-quickstart-rust-components"
route = "/spin/quickstart/rust-components"

[[trigger.http]]
id = "trigger-spin-contributing"
component = "spin-contributing"
route = "/spin/contributing/"

[[trigger.http]]
id = "trigger-spin-kv-store-tutorial"
component = "spin-kv-store-tutorial"
route = "/spin/kv-store"

[[trigger.http]]
id = "trigger-redirect-contributing-common-to-spin"
component = "redirect-contributing-common-to-spin"
route = "/common/cli-reference"

[[trigger.http]]
id = "trigger-registry-tutorial"
component = "registry-tutorial"
route = "/spin/spin-oci"

[[trigger.http]]
id = "trigger-url-shortener-tutorial"
component = "url-shortener-tutorial"
route = "/spin/url-shortener"

[[trigger.http]]
id = "trigger-key-value-store-tutorial"
component = "key-value-store-tutorial"
route = "/spin/kv-store-tutorial"

[[trigger.http]]
id = "trigger-ai-sentiment-analysis-api-tutorial"
component = "ai-sentiment-analysis-api-tutorial"
route = "/spin/serverless-ai-tutorial"

[[trigger.http]]
id = "trigger-serverless-ai"
component = "serverless-ai"
route = "/cloud/serverless-ai"

[[trigger.http]]
id = "trigger-redirect-wasm-langs-root"
component = "redirect-wasm-langs-root"
route = "/wasm-languages/"

[[trigger.http]]
id = "trigger-redirect-wasm-functions-root"
component = "redirect-wasm-functions-root"
route = "/wasm-functions/"

[[trigger.http]]
id = "trigger-spin-kubernetes-dynamic-configuration"
component = "redirect-spin-kubernetes-dynamic-configuration"
route = "/spin/v2/kubernetes-dynamic-configuration"

[[trigger.http]]
id = "trigger-spin-kubernetes-sidecars"
component = "redirect-spin-kubernetes-sidecars"
route = "/spin/v2/kubernetes-sidecars"

[[trigger.http]]
id = "trigger-spin-kubernetes-known-issues"
component = "redirect-spin-kubernetes-known-issues"
route = "/spin/v2/kubernetes-known-issues"

[[trigger.http]]
id = "trigger-spin-deploying-to-fermyon"
component = "redirect-spin-deploying-to-fermyon"
route = "/spin/deploying-to-fermyon"

[[trigger.http]]
id = "trigger-spin-developing"
component = "redirect-spin-developing"
route = "/spin/developing"

[[trigger.http]]
id = "trigger-spin-wildcard-redirect-to-spinframework"
component = "wildcard-redirect-to-spinframework"
route = "/spin/..."

[component.bartholomew]
# Using build from bartholomew main
source = "modules/bartholomew.wasm"
environment = { PREVIEW_MODE = "0" }
files = ["content/**/*", "templates/*", "scripts/*", "config/*", "shortcodes/*"]

[component.bartholomew.build]
command = "npm run build-index"
watch = ["content/**/*", "templates/*"]

[component.fileserver-static]
source = "modules/spin_static_fs.wasm"
files = [{ source = "static/", destination = "/" }]

[component.fileserver-downloads]
source = "modules/spin_static_fs.wasm"
files = [{ source = "downloads/", destination = "/" }]

# Redirect /cloud to /cloud/index
[component.redirect-cloud-index]
source = "modules/redirect.wasm"
environment = { DESTINATION = "/cloud/index" }

# Redirect /bartholomew to /bartholomew/index
[component.redirect-bartholomew-index]
source = "modules/redirect.wasm"
environment = { DESTINATION = "/bartholomew/index" }

# Redirect /spin/rust-components/http-trigger to https://spinframework.dev/http-trigger
[component.redirect-spin-rust-components-http-trigger]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/http-trigger", STATUSCODE = "301" }

# Redirect /spin/contributing/extending-and-embedding to https://spinframework.dev/extending-and-embedding
[component.spin-contributing-extending-and-embedding]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/extending-and-embedding", STATUSCODE = "301" }

# Redirect /spin/rust-components/redis-trigger to https://spinframework.dev/redis-trigger
[component.spin-rust-components-redis-trigger]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/redis-trigger", STATUSCODE = "301" }

# Redirect /spin/configuration to https://spinframework.dev/writing-apps
[component.spin-configuration]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/writing-apps", STATUSCODE = "301" }

# Redirect /spin/configuration/http-trigger to https://spinframework.dev/http-trigger
[component.spin-configuration-http-trigger]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/http-trigger", STATUSCODE = "301" }

# Redirect /spin/configuration/redis-trigger to https://spinframework.dev/redis-trigger
[component.spin-configuration-redis-trigger]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/redis-trigger", STATUSCODE = "301" }

# Redirect /spin/quickstart/developing to https://spinframework.dev/quickstart
[component.spin-quickstart-developing]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/quickstart" }

# Redirect /spin/quickstart/configuration to https://spinframework.dev/writing-apps
[component.spin-quickstart-configuration]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/writing-apps", STATUSCODE = "301" }

# Redirect /spin/quickstart/install to https://spinframework.dev/install
[component.spin-quickstart-install]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/install", STATUSCODE = "301" }

# Redirect /spin/quickstart/go-components to https://spinframework.dev/go-components
[component.spin-quickstart-go-components]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/go-components", STATUSCODE = "301" }

# Redirect /spin/quickstart/rust-components to https://spinframework.dev/rust-components
[component.spin-quickstart-rust-components]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/rust-components", STATUSCODE = "301" }

# Redirect /spin/contributing/ to https://spinframework.dev/contributing-spin
[component.spin-contributing]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/contributing-spin", STATUSCODE = "301" }

# Redirect /spin/kv-store/ to https://spinframework.dev/key-value-store-tutorial
[component.spin-kv-store-tutorial]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/key-value-store-tutorial" }

# Redirecting from common to spin incase someone had it bookmarked before removal of common
[component.redirect-contributing-common-to-spin]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/cli-reference", STATUSCODE = "301" }

# Redirect /spin/kubernetes-dynamic-configuration to https://spinframework.dev/kubernetes
[component.redirect-spin-kubernetes-dynamic-configuration]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/kubernetes", STATUSCODE = "301" }

# Redirect /spin/kubernetes-sidecars to https://spinframework.dev/kubernetes
[component.redirect-spin-kubernetes-sidecars]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/kubernetes", STATUSCODE = "301" }

# Redirect /spin/kubernetes-known-issues to https://spinframework.dev/kubernetes
[component.redirect-spin-kubernetes-known-issues]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/kubernetes", STATUSCODE = "301" }

# Redirect /spin/spin-oci to https://spinframework.dev/registry-tutorial
[component.registry-tutorial]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/registry-tutorial", STATUSCODE = "301" }

# Redirect /spin/url-shortener to https://spinframework.dev/url-shortener-tutorial
[component.url-shortener-tutorial]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/url-shortener-tutorial", STATUSCODE = "301" }

# Redirect /spin/kv-store-tutorial to https://spinframework.dev/key-value-store-tutorial
[component.key-value-store-tutorial]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/key-value-store-tutorial", STATUSCODE = "301" }

# Redirect /spin/serverless-ai-tutorial to https://spinframework.dev/ai-sentiment-analysis-api-tutorial
[component.ai-sentiment-analysis-api-tutorial]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/ai-sentiment-analysis-api-tutorial", STATUSCODE = "301" }

# Redirect /cloud/serverless-ai to https://spinframework.dev/serverless-ai-hello-world
[component.serverless-ai]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/serverless-ai-hello-world.md", STATUSCODE = "301" }

# Redirect /spin/deploying-to-fermyon to https://spinframework.dev/deploying
[component.redirect-spin-deploying-to-fermyon]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/deploying", STATUSCODE = "301" }

# Redirect /spin/developing to https://spinframework.dev/quickstart
[component.redirect-spin-developing]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev/quickstart", STATUSCODE = "301" }

# Redirect /spin/...  to spinframework.dev/...
[component.wildcard-redirect-to-spinframework]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev", STATUSCODE = "301", INCLUDE_PATH = "true", TRIM_PREFIX = "/spin" }

# Redirect /hub/...  to spinframework.dev/hub/...
[component.wildcard-redirect-spin-up-hub]
source = "modules/redirect.wasm"
environment = { DESTINATION = "https://spinframework.dev", STATUSCODE = "301", INCLUDE_PATH = "true" }

# Redirect /wasm-languages to /wasm-languages/webassembly-language-support
[component.redirect-wasm-langs-root]
source = "modules/redirect.wasm"
environment = { DESTINATION = "/wasm-languages/webassembly-language-support" }

# Redirect /wasm-functions to /wasm-functions/index
[component.redirect-wasm-functions-root]
source = "modules/redirect.wasm"
environment = { DESTINATION = "/wasm-functions/index" }
